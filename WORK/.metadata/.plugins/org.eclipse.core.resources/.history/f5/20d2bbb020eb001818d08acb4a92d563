<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
        

	<!-- 引入文件 -->
	<import resource="classPath:applicationContext.xml" />

	<!--开启注解扫描 -->
	<context:component-scan base-package="com.dwx.p2p.base" />

	<mvc:interceptors>
		<!-- 配置登录拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.xmg.eloan.base.interceptor.LoginInterceptor" />
		</mvc:interceptor>
		<!-- 配置添加工具类拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.xmg.eloan.base.interceptor.AddCustomUtilsInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!--处理上传 -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<!-- SpEL:spring里面的EL表达式实现;允许在Spring的配置文件中使用El表达式;使用#{} -->
		<property name="maxUploadSize" value="#{1024*1024*100}" />
	</bean>

	<!--配置freeMarker的模板路径 -->
	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 配置freemarker的文件编码 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 配置freemarker寻找模板的路径 -->
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
	</bean>

	<!--freemarker视图解析器 -->
	<!-- <bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		是否在model自动把session中的attribute导入进去;
		<property name="exposeSessionAttributes" value="true" />
		配置逻辑视图自动添加的后缀名
		<property name="suffix" value=".ftl" />
		配置视图的输出HTML的contentType
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>
 -->
	<!-- -->
	<bean id="websiteSummaryJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="websiteCacheService" />
		<property name="targetMethod" value="calWebsiteSummary" />
	</bean>

	<bean id="websiteSummaryTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail" ref="websiteSummaryJob" />
		<property name="startDelay" value="10000" /><!-- 调度工厂实例化后，经过0毫秒开始执行调度 -->
		<property name="repeatInterval" value="#{24*3600*1000}" /><!-- 
			每2秒调度一次 -->
	</bean>

	<!-- 配置调度工厂 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="websiteSummaryTrigger" />
			</list>
		</property>
	</bean>
</beans>